/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class FormTransaksi extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement pst;
    ResultSet rs;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/AA_BDL_UTS_FINAL_SEKALI";
    String user = "postgres";
    String password = " ";

    private CRUD crud = new CRUD();
    private DefaultTableModel tableModelT;
    private DefaultTableModel tableModelTD;

    public FormTransaksi() {
        initComponents();
        tableModelT = (DefaultTableModel) tblTransaksi.getModel(); // Ambil model dari tabel
        tableModelTD = (DefaultTableModel) tblTransaksiDetail.getModel(); // Ambil model dari tabel
        loadDataTransaksi();
        loadDataDetailTransaksi();

        ZonedDateTime currentDateTime = ZonedDateTime.now(ZoneId.of("Asia/Jakarta"));

        // Membuat formatter dengan format hari, tanggal, bulan, tahun, jam, menit, detik, dan zona waktu
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("EEEE, dd-MMMM-yyyy HH:mm:ss z", Locale.forLanguageTag("id"));

        // Menerapkan formatter pada currentDateTime
        String formattedDateTime = currentDateTime.format(formatter);

        tfTanggal.setText(formattedDateTime);
    }

    public void loadDataTransaksi() {
        tableModelT.setRowCount(0); // Bersihkan tabel
        List<Transaksi> transaksiList = crud.tampilTransaksi(); //list<nama class>
        Collections.sort(transaksiList, Comparator.comparing(Transaksi::getId_transaksi));
        tableModelT.setColumnIdentifiers(new Object[]{"Tanggal", "ID Transaksi", "ID Pelanggan", "Total Harga"});

        for (Transaksi t : transaksiList) { //for(nama class...
            tableModelT.addRow(new Object[]{t.getTanggal(), t.getId_transaksi(), t.getId_pelanggan(), t.getTotal_harga()});
        }
    }

    public void loadDataDetailTransaksi() {
        tableModelTD.setRowCount(0); // Bersihkan tabel
        List<TransaksiDetail> transaksiDetails = crud.tampilDetailTransaksi(); //list<nama class>
        //Collections.sort(transaksiList, Comparator.comparingInt(Transaksi::getId_transaksi));
        tableModelTD.setColumnIdentifiers(new Object[]{"ID Transaksi", "ID Produk", "Jumlah Produk", "Harga Satuan", "Subtotal"});

        for (TransaksiDetail t : transaksiDetails) { //for(nama class...
            tableModelTD.addRow(new Object[]{t.getId_transaksi(), t.getId_produk(), t.getJumlah(), t.getHarga_satuan(), t.getSubtotal()});
        }
    }

    public void koneksi() {
        try {
            Class.forName(driver);// Memuat driver PostgreSQL
            conn = DriverManager.getConnection(koneksi, user, password);// Membuat koneksi ke database
            System.out.println("Koneksi Database Toko Roti Berhasil!");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Koneksi Database Toko Roti Gagal!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfTanggal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfIDTransaksi = new javax.swing.JTextField();
        tfIDPelanggan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();
        btnHapusSemua = new javax.swing.JButton();
        tfCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransaksi = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfTotalHarga = new javax.swing.JTextField();
        tfTanggal1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lbNamaProduk = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfHargaSatuan = new javax.swing.JTextField();
        tfIDProduk = new javax.swing.JTextField();
        tfJumlah = new javax.swing.JTextField();
        tfSubtotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTransaksiDetail = new javax.swing.JTable();
        toFrameProduk = new javax.swing.JButton();
        toFramePelanggan = new javax.swing.JButton();
        toFrameTransaksi = new javax.swing.JButton();
        toFrameMain = new javax.swing.JButton();
        btnTambahTransaksi = new javax.swing.JButton();
        btnTambahDetailTransaksi = new javax.swing.JButton();
        tfNamaProduk = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        lStock = new javax.swing.JLabel();
        tSearch = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnCariHargaTotal = new javax.swing.JButton();
        btnCariSubtotal = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("--- PROGRAM CRUD TRANSAKSI");
        jLabel5.setToolTipText("");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Tanggal");

        jLabel3.setText("ID Transaksi");

        tfIDTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDTransaksiPelangganActionPerformed(evt);
            }
        });

        tfIDPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDPelangganActionPerformed(evt);
            }
        });

        jLabel4.setText("ID Pelanggan");

        jLabel7.setText("_________________________________________________________________________________________________________________________");

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnHapusSemua.setText("Hapus Semua");
        btnHapusSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusSemuaActionPerformed(evt);
            }
        });

        tfCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCariActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        tblTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTransaksi);

        jLabel8.setText("TABEL TRANSAKSI");

        jLabel10.setText("Total Harga");

        tfTanggal1.setText("  ");

        jLabel11.setText("Masukkan ID Transaksi");

        lbNamaProduk.setText("Nama Produk");

        jLabel9.setText("ID Produk");

        jLabel12.setText("Jumlah");

        jLabel13.setText("Harga @");

        jLabel14.setText("Subtotal");

        tfIDProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDProdukActionPerformed(evt);
            }
        });

        tfJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfJumlahActionPerformed(evt);
            }
        });

        tfSubtotal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tfSubtotalComponentShown(evt);
            }
        });
        tfSubtotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tfSubtotalPropertyChange(evt);
            }
        });

        tblTransaksiDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTransaksiDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTransaksiDetailMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTransaksiDetail);

        toFrameProduk.setText("Produk");
        toFrameProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFrameProdukActionPerformed(evt);
            }
        });

        toFramePelanggan.setText("Pelanggan");
        toFramePelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFramePelangganActionPerformed(evt);
            }
        });

        toFrameTransaksi.setText("Transaksi");
        toFrameTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFrameTransaksiActionPerformed(evt);
            }
        });

        toFrameMain.setText("Utama");
        toFrameMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFrameMainActionPerformed(evt);
            }
        });

        btnTambahTransaksi.setText("Tambah");
        btnTambahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahTransaksiActionPerformed(evt);
            }
        });

        btnTambahDetailTransaksi.setText("Tambah");
        btnTambahDetailTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahDetailTransaksiActionPerformed(evt);
            }
        });

        tfNamaProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamaProdukActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        tSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tSearchActionPerformed(evt);
            }
        });
        tSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnHapusSemua, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(87, 87, 87)
                                                .addComponent(jLabel11))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(toFrameProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(toFramePelanggan)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(toFrameTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(toFrameMain, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(tfCari))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(tfTanggal, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfTanggal1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(tfIDTransaksi)
                                                .addGap(85, 85, 85)))))
                                .addGap(0, 86, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(tfHargaSatuan, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfJumlah, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfIDProduk, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfTotalHarga, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                                            .addComponent(tfSubtotal)
                                            .addComponent(tfIDPelanggan)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfNamaProduk)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTambahTransaksi)
                                    .addComponent(btnTambahDetailTransaksi)
                                    .addComponent(lStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(393, 393, 393))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tfTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTanggal1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfIDTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfIDPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tfTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTambahTransaksi))
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfIDProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNamaProduk)
                            .addComponent(tfNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lStock, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(tfJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(tfHargaSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(tfSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTambahDetailTransaksi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHapusSemua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfCari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toFrameProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toFramePelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toFrameTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toFrameMain, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(393, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnCariHargaTotal.setText("Cari");
        btnCariHargaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariHargaTotalActionPerformed(evt);
            }
        });

        btnCariSubtotal.setText("Sub");
        btnCariSubtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariSubtotalActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCariHargaTotal)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCariSubtotal)
                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCariHargaTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCariSubtotal)
                .addGap(11, 11, 11)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfIDTransaksiPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDTransaksiPelangganActionPerformed
        String id = tfIDTransaksi.getText().trim();
        double totalHarga = crud.tHarga(id);
        tfTotalHarga.setText(String.valueOf(totalHarga));
    }//GEN-LAST:event_tfIDTransaksiPelangganActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        try {
            // Data transaksi
            String tanggal = tfTanggal.getText();
            String idTr = tfIDTransaksi.getText();
            String idPe = tfIDPelanggan.getText();
            Double tHarga = Double.valueOf(tfTotalHarga.getText());

            // Data detail transaksi (sesuaikan dengan field yang ada pada form) // Asumsikan ada field untuk ID Detail Transaksi
            String idPr = tfIDProduk.getText();
            int jumlah = Integer.parseInt(tfJumlah.getText());
            double hargaSatuan = Double.parseDouble(tfHargaSatuan.getText());
            double subtotal = jumlah * hargaSatuan;

            // Panggil method untuk menambahkan data ke tabel transaksi
            if (crud.tambahTransaksi(tanggal, idTr, idPe, tHarga)) {
                // Panggil method untuk menambahkan data ke tabel detail transaksi
                if (crud.tambahTransaksiDetail(idTr, idPr, jumlah, hargaSatuan, subtotal)) {
                    JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan.");
                    loadDataTransaksi();
                    loadDataDetailTransaksi(); // Load data detail transaksi juga
                    clearForm();
                } else {
                    // Jika gagal menambahkan detail transaksi, rollback transaksi (jika menggunakan database yang mendukung transaksi)
                    // atau berikan pesan error yang sesuai
                    JOptionPane.showMessageDialog(this, "Gagal menambahkan detail transaksi.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menambahkan data transaksi.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input harus berupa angka.");
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {

            String tanggal = tfTanggal.getText();
            String idTr = tfIDTransaksi.getText();
            String idPe = tfIDPelanggan.getText();
            Double tHarga = Double.valueOf(tfTotalHarga.getText());

            if (crud.updateTransaksi(tanggal, idTr, idPe, tHarga)) {
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate.");
                loadDataTransaksi();

            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input ID harus berupa angka.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        try {
            String id = tfIDTransaksi.getText();
            if (crud.hapusTransaksiDetail(id)) {
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
                loadDataDetailTransaksi();
                clearForm();

            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input ID harus berupa angka.");
        }

        try {
            String id = tfIDTransaksi.getText();
            if (crud.hapusTransaksi(id)) {
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
                loadDataTransaksi();
                clearForm();

            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input ID harus berupa angka.");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnHapusSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusSemuaActionPerformed
        // TODO add your handling code here:
        int confirm1 = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus semua data?", "Konfirmasi Hapus Semua", JOptionPane.YES_NO_OPTION);
        if (confirm1 == JOptionPane.YES_OPTION) {
            crud.hapusSemuaTransaksiDetail();
            JOptionPane.showMessageDialog(this, "Semua data berhasil dihapus.");
            loadDataTransaksi();
            clearForm();
        }
        int confirm2 = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus semua data?", "Konfirmasi Hapus Semua", JOptionPane.YES_NO_OPTION);
        if (confirm2 == JOptionPane.YES_OPTION) {
            crud.hapusSemuaTransaksi();
            JOptionPane.showMessageDialog(this, "Semua data berhasil dihapus.");
            loadDataDetailTransaksi();
            clearForm();
        }
    }//GEN-LAST:event_btnHapusSemuaActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        cariData();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        loadDataTransaksi();
        ZonedDateTime currentDateTime = ZonedDateTime.now(ZoneId.of("Asia/Jakarta"));

        // Membuat formatter dengan format hari, tanggal, bulan, tahun, jam, menit, detik, dan zona waktu
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("EEEE, dd-MMMM-yyyy HH:mm:ss z", Locale.forLanguageTag("id"));

        // Menerapkan formatter pada currentDateTime
        String formattedDateTime = currentDateTime.format(formatter);

        tfTanggal.setText(formattedDateTime);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        crud.tutupKoneksi();
        System.exit(0);
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void tblTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTransaksiMouseClicked
        // TODO add your handling code here:
        int row = tblTransaksi.getSelectedRow();
        tfTanggal.setText(tblTransaksi.getValueAt(row, 0).toString());
        tfIDTransaksi.setText(tblTransaksi.getValueAt(row, 1).toString());
        tfIDPelanggan.setText(tblTransaksi.getValueAt(row, 2).toString());
        tfTotalHarga.setText(tblTransaksi.getValueAt(row, 3).toString());
    }//GEN-LAST:event_tblTransaksiMouseClicked

    private void tfIDPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDPelangganActionPerformed

    private void toFrameProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFrameProdukActionPerformed
        // TODO add your handling code here:
        FormProduk iniFrameProduksi = new FormProduk();
        iniFrameProduksi.setVisible(true);
    }//GEN-LAST:event_toFrameProdukActionPerformed

    private void toFramePelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFramePelangganActionPerformed
        // TODO add your handling code here:
        FormPelanggan iniFramePelanggan = new FormPelanggan();
        iniFramePelanggan.setVisible(true);
    }//GEN-LAST:event_toFramePelangganActionPerformed

    private void toFrameTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFrameTransaksiActionPerformed
        // TODO add your handling code here:
        FormTransaksi iniFrameTransaksi = new FormTransaksi();
        iniFrameTransaksi.setVisible(true);
        //        iniFrameTransaksi.setVisible(false);
    }//GEN-LAST:event_toFrameTransaksiActionPerformed

    private void toFrameMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFrameMainActionPerformed
        // TODO add your handling code here:
        MainFrame iniFrameMain = new MainFrame();
        iniFrameMain.setVisible(true);
    }//GEN-LAST:event_toFrameMainActionPerformed

    private void tblTransaksiDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTransaksiDetailMouseClicked
        // TODO add your handling code here:
        int row = tblTransaksiDetail.getSelectedRow();
        tfIDTransaksi.setText(tblTransaksiDetail.getValueAt(row, 0).toString());
        tfIDProduk.setText(tblTransaksiDetail.getValueAt(row, 1).toString());
        tfJumlah.setText(tblTransaksiDetail.getValueAt(row, 2).toString());
        tfHargaSatuan.setText(tblTransaksiDetail.getValueAt(row, 3).toString());
        tfSubtotal.setText(tblTransaksiDetail.getValueAt(row, 4).toString());
    }//GEN-LAST:event_tblTransaksiDetailMouseClicked

    private void btnTambahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahTransaksiActionPerformed
        // TODO add your handling code here:
        try {
            String tanggal = tfTanggal.getText();
            String id_transaksi = tfIDTransaksi.getText();
            String id_pelanggan = tfIDPelanggan.getText();
            Double total_harga = Double.valueOf(tfTotalHarga.getText());
            if (crud.tambahTransaksi(tanggal, id_transaksi, id_pelanggan, total_harga)) {
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan.");
                loadDataTransaksi();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menambahkan data.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Masukkan data seluruhnya.");
        }
    }//GEN-LAST:event_btnTambahTransaksiActionPerformed

    private void btnTambahDetailTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahDetailTransaksiActionPerformed
        // TODO add your handling code here:
        try {
            String idTr = tfIDTransaksi.getText();
            String idPr = tfIDProduk.getText();
            int jumlah = Integer.parseInt(tfJumlah.getText());
            Double hargaSatuan = Double.valueOf(tfHargaSatuan.getText());
            Double subtotal = Double.valueOf(tfSubtotal.getText());

            if (crud.tambahTransaksiDetail(idTr, idPr, jumlah, hargaSatuan, subtotal)) {
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan.");
                loadDataDetailTransaksi();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menambahkan data.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input ID anda salah.");
        }
    }//GEN-LAST:event_btnTambahDetailTransaksiActionPerformed

    private void tfSubtotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tfSubtotalPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSubtotalPropertyChange

    private void tfSubtotalComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tfSubtotalComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSubtotalComponentShown

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
        tfSubtotal.setEditable(false);
    }//GEN-LAST:event_jPanel1ComponentShown

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        //update sekalian  set autocommit true commit dan rollback dengan begin atau set auto commit di button tambah yang transaski
        try {
            String tanggal = tfTanggal.getText();
            String idTr = tfIDTransaksi.getText();
            String idPe = tfIDPelanggan.getText();
            Double tHarga = Double.valueOf(tfTotalHarga.getText());

            if (crud.updateTransaksi(tanggal, idTr, idPe, tHarga)) {
                //JOptionPane.showMessageDialog(this, "Data berhasil diupdate.");
                loadDataTransaksi();

                //konfirmasi
                int confirm1 = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menyimpan semua data?", "Konfirmasi simpan Semua", JOptionPane.YES_NO_CANCEL_OPTION);
                if (confirm1 == JOptionPane.YES_OPTION) {
                    crud.endSql();
                    crud.kembaliAuto();
                    JOptionPane.showMessageDialog(this, "Semua data berhasil disimpan setelah transaksi.");
                    loadDataTransaksi();
                } else if (confirm1 == JOptionPane.NO_OPTION) {
                    crud.rollbackSql();
                    JOptionPane.showMessageDialog(this, "Transaksi dibatalkan.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input ID harus berupa angka.");
        }

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void tfIDProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDProdukActionPerformed
        // TODO add your handling code here:
        try {
            // Pastikan tfCari tidak kosong dan berisi angka yang valid
            String inputId = tfIDProduk.getText().trim();

            if (inputId.isEmpty()) {
                throw new NumberFormatException("Input tidak boleh kosong.");
            }

            // Parse input ke dalam bentuk integer
            String id = inputId;  // ID produk

            // Panggil method cariHargaByIdProduk untuk mencari produk berdasarkan ID
            Produk produk = crud.cariHargaByIdProduk(id);

            String namaProduk = produk.getNama_produk();
            int stockProduk = produk.getStock();
            // Hitung total harga (harga satuan * jumlah produk yang dibeli)

            // Tampilkan total harga di tfTotalHarga
            tfNamaProduk.setText(String.valueOf(namaProduk));
            lStock.setText(String.valueOf(stockProduk));

        } catch (NumberFormatException ex) {
            // Tangkap kesalahan jika input bukan angka yang valid
            JOptionPane.showMessageDialog(this, "Input harus berupa angka yang valid.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DataTidakDitemukanException ex) {
            // Tangkap kesalahan jika produk tidak ditemukan
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Data Tidak Ditemukan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfIDProdukActionPerformed

    private void tfJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfJumlahActionPerformed
        // TODO add your handling code here:
        try {
            // Pastikan tfCari tidak kosong dan berisi angka yang valid
            String inputId = tfIDProduk.getText().trim();
            String inputJumlah = tfJumlah.getText().trim();

            if (inputId.isEmpty() || inputJumlah.isEmpty()) {
                throw new NumberFormatException("Input tidak boleh kosong.");
            }

            // Parse input ke dalam bentuk integer
            String id = inputId;  // ID produk
            int jumlah = Integer.parseInt(inputJumlah);  // Jumlah produk yang dibeli

            // Panggil method cariHargaByIdProduk untuk mencari produk berdasarkan ID
            Produk produk = crud.cariHargaByIdProduk(id);
            double hargaSatuanProduk = produk.getHarga();
            String namaProduk = produk.getNama_produk();
            // Hitung total harga (harga satuan * jumlah produk yang dibeli)
            double totalHarga = produk.getHarga() * jumlah;

            // Tampilkan total harga di tfTotalHarga
            tfNamaProduk.setText(String.valueOf(namaProduk));
            tfHargaSatuan.setText(Double.toString(hargaSatuanProduk));
            tfTotalHarga.setText(Double.toString(totalHarga));
            tfSubtotal.setText(Double.toString(totalHarga));

        } catch (NumberFormatException ex) {
            // Tangkap kesalahan jika input bukan angka yang valid
            JOptionPane.showMessageDialog(this, "Input harus berupa angka yang valid.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DataTidakDitemukanException ex) {
            // Tangkap kesalahan jika produk tidak ditemukan
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Data Tidak Ditemukan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tfJumlahActionPerformed

    private void btnCariSubtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariSubtotalActionPerformed
        // TODO add your handling code here:
        try {
            // Pastikan tfCari tidak kosong dan berisi angka yang valid
            String inputId = tfIDProduk.getText().trim();
            String inputJumlah = tfJumlah.getText().trim();

            if (inputId.isEmpty() || inputJumlah.isEmpty()) {
                throw new NumberFormatException("Input tidak boleh kosong.");
            }

            // Parse input ke dalam bentuk integer
            String id = inputId;  // ID produk
            int jumlah = Integer.parseInt(inputJumlah);  // Jumlah produk yang dibeli

            // Panggil method cariHargaByIdProduk untuk mencari produk berdasarkan ID
            Produk produk = crud.cariHargaByIdProduk(id);
            double hargaSatuanProduk = produk.getHarga();
            String namaProduk = produk.getNama_produk();
            // Hitung total harga (harga satuan * jumlah produk yang dibeli)
            double totalHarga = produk.getHarga() * jumlah;

            // Tampilkan total harga di tfTotalHarga
            tfNamaProduk.setText(String.valueOf(namaProduk));
            tfHargaSatuan.setText(Double.toString(hargaSatuanProduk));
            tfTotalHarga.setText(Double.toString(totalHarga));
            tfSubtotal.setText(Double.toString(totalHarga));

        } catch (NumberFormatException ex) {
            // Tangkap kesalahan jika input bukan angka yang valid
            JOptionPane.showMessageDialog(this, "Input harus berupa angka yang valid.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DataTidakDitemukanException ex) {
            // Tangkap kesalahan jika produk tidak ditemukan
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Data Tidak Ditemukan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCariSubtotalActionPerformed

    private void btnCariHargaTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariHargaTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCariHargaTotalActionPerformed

    private void tfNamaProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamaProdukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamaProdukActionPerformed

    private void tfCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCariActionPerformed

    private void tSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tSearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel ob = (DefaultTableModel) tblTransaksi.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(ob);
        tblTransaksi.setRowSorter(obj);

        obj.setRowFilter(RowFilter.regexFilter(tSearch.getText()));
    }//GEN-LAST:event_tSearchKeyReleased

    private void tSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tSearchActionPerformed
    private void clearForm() {
        tfTanggal.setText("");
        tfIDTransaksi.setText("");
        tfIDPelanggan.setText("");
        tfTotalHarga.setText("");
        tfCari.setText("");
    }

    private void cariData() {
        try {
            String idTr = tfCari.getText().trim();
            Transaksi m = crud.cariDataByIdTransaksi(idTr); // nama class
            // Tampilkan hasil pencarian
            tableModelT.setRowCount(0); // Clear table
            tableModelT.addRow(new Object[]{m.getTanggal(), m.getId_transaksi(), m.getId_pelanggan(), m.getTotal_harga()});

            tfTanggal.setText(String.valueOf(m.getTanggal()));
            tfIDTransaksi.setText(String.valueOf(m.getId_transaksi()));
            tfIDPelanggan.setText(String.valueOf(m.getId_pelanggan()));
            tfTotalHarga.setText(String.valueOf(m.getTotal_harga()));

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input ID harus angka.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DataTidakDitemukanException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Data Tidak Ditemukan", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCariHargaTotal;
    private javax.swing.JButton btnCariSubtotal;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHapusSemua;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTambahDetailTransaksi;
    private javax.swing.JButton btnTambahTransaksi;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lStock;
    private javax.swing.JLabel lbNamaProduk;
    private javax.swing.JTextField tSearch;
    private javax.swing.JTable tblTransaksi;
    private javax.swing.JTable tblTransaksiDetail;
    private javax.swing.JTextField tfCari;
    private javax.swing.JTextField tfHargaSatuan;
    private javax.swing.JTextField tfIDPelanggan;
    private javax.swing.JTextField tfIDProduk;
    private javax.swing.JTextField tfIDTransaksi;
    private javax.swing.JTextField tfJumlah;
    private javax.swing.JTextField tfNamaProduk;
    private javax.swing.JTextField tfSubtotal;
    private javax.swing.JTextField tfTanggal;
    private javax.swing.JLabel tfTanggal1;
    private javax.swing.JTextField tfTotalHarga;
    private javax.swing.JButton toFrameMain;
    private javax.swing.JButton toFramePelanggan;
    private javax.swing.JButton toFrameProduk;
    private javax.swing.JButton toFrameTransaksi;
    // End of variables declaration//GEN-END:variables
}
